{"version":3,"file":"static/js/834.e767d2db.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContentLoader/ContentLoader.styled.jsx","components/ContentLoader/ContentLoader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/AppStyled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  margin-left: 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 5px;\n`;\n\nexport const StyledFormLabel = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const StyledFormInput = styled.input`\n  width: 150px;\n  margin-left: 20px;\n  border-radius: 4px;\n  border: solid 2px blue;\n\n  &:hover,\n  focus {\n    box-shadow: 0 0 5px yellow;\n  }\n`;\n\nexport const StyledFormBtm = styled.button`\n  background-color:blue; \n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  font-size: 16px;\n  border-radius: 8px;\n  height: 15px;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 5px yellow;\n  }\n`;\n\nexport const StyledFormItems = styled.div`\n  background-color: blue; \\\n  border: none;\n  color: white;\n  font-size: 16px;\n  border-radius: 8px;\n  height: 35px;\n  width: 90px;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState } from 'react';\n\nimport {\n  useFetchContactsQuery,\n  useAddContactMutation,\n} from 'redux/servises/contactApi';\n\nimport {\n  StyledForm,\n  StyledFormLabel,\n  StyledFormInput,\n  StyledFormBtm,\n  StyledFormItems,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [number, setNumber] = useState('');\n  const [name, setName] = useState('');\n\n  const [addContact] = useAddContactMutation();\n\n  const { data = [] } = useFetchContactsQuery();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('This field does not exist');\n    }\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formattedName = name.toLowerCase();\n    const isNewContact = data.every(\n      contact => contact.name.toLowerCase() !== formattedName\n    );\n\n    if (!isNewContact) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    addContact({ name, number });\n\n    reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledFormLabel>\n        <StyledFormItems>Name</StyledFormItems>\n        <StyledFormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </StyledFormLabel>\n      <StyledFormLabel>\n        <StyledFormItems>Number</StyledFormItems>\n        <StyledFormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </StyledFormLabel>\n      <StyledFormBtm type=\"submit\">Add</StyledFormBtm>\n    </StyledForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContacts = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 20px;\n  width: 785px;\n`;\n\nexport const StyledName = styled.span`\n  color: #000000;\n`;\n\nexport const StyledNumber = styled.span`\n  color: blue;\n  padding-left: 10px;\n`;\n\nexport const StyledButton = styled.button`\n  align-items: center;\n  background-color: blue;\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  font-size: 16px;\n  height: 15px;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n\n  &:hover {\n    box-shadow: 0 0 5px yellow;\n  }\n`;","import PropTypes from 'prop-types';\nimport {\n  StyledContacts,\n  StyledButton,\n  StyledName,\n  StyledNumber,\n} from './Contact.styled';\nimport { useDeleteContactMutation } from 'redux/servises/contactApi';\n\n\nexport const Contact = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <StyledContacts>\n      <StyledName>{name}: </StyledName>\n      <StyledNumber>{number} </StyledNumber>\n      <StyledButton\n        onClick={() => {\n          deleteContact({ id, name });\n        }}\n      >\n        Delete\n      </StyledButton>\n    </StyledContacts>\n  );\n};\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  list-style: none;\n`;\n\nexport const StyledContactWraper = styled.div`\n  list-style: none;\n  width: 600px;\n  margin-left: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  margin-left: 70px;\n\n  padding: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledContentLoader = styled.div`\n  list-style: none;\n`;\n","import { Blocks } from 'react-loader-spinner';\nimport { StyledContentLoader } from './ContentLoader.styled';\n\nconst ContentLoader = () => {\n  return (\n    <StyledContentLoader>\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    </StyledContentLoader>\n  );\n};\n\nexport default ContentLoader;\n","import { Contact } from 'components/Contact/Contact';\n\nimport { StyledContactList, StyledContactWraper } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter, getIsLoading } from '../../redux/auth/selectors';\n\nimport ContentLoader from '../ContentLoader/ContentLoader';\nimport { useFetchContactsQuery } from 'redux/servises/contactApi';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(getIsLoading);\n  const filter = useSelector(getFilter);\n  const { data = [] } = useFetchContactsQuery();\n\n  const formattedFilter = filter.toLowerCase();\n  const filteredContacts = data.filter(contact =>\n    contact.name.toLowerCase().includes(formattedFilter)\n  );\n  return (\n    <StyledContactWraper>\n      <StyledContactList>\n        {filteredContacts.map(({ id, name, number }) => (\n          <Contact key={id} name={name} number={number} id={id} />\n        ))}\n\n        {isLoading && <ContentLoader />}\n      </StyledContactList>\n    </StyledContactWraper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledFilterInput = styled.input`\n  width: 150px;\n  height: 35px;\n  margin-left: 20px;\n  border-radius: 4px;\n  border: solid 2px blue;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 5px yellow;;\n  }\n`;\n\nexport const StyledFilterItems= styled.button`\n  background-color: blue;\n  border: none;\n  color: white;\n  font-size: 16px;\n  border-radius: 8px;\n  height: 35px;\n  width: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 20px;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 5px yellow;;\n  }\n`;\n\n\n\n","import {\n  StyledFilter,\n  StyledFilterInput,\n  StyledFilterItems,\n} from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/auth/selectors';\nimport { SelectFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(SelectFilter(target.value));\n  };\n\n  return (\n    <>\n      <StyledFilter>\n        <StyledFilterItems>Find contacts by name</StyledFilterItems>\n        <StyledFilterInput\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          onChange={handleChange}\n          value={filter}\n        />\n      </StyledFilter>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContac = styled.h2`\n  margin-left: 50px;\n  color: blue;\n`;\n\nexport const StyledTitel = styled.h1`\n  margin-left: 50px;\n  color:blue;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { StyledContac, StyledTitel } from './AppStyled';\nimport { useSelector } from 'react-redux';\nimport { selectUsername, selectIsLoggedIn } from 'redux/auth/selectors';\n\n\nexport default function Contacts() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const username = useSelector(selectUsername);\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <div>\n          <StyledTitel>{username} phonebook: </StyledTitel>\n          <ContactForm />\n          <StyledContac>Contacts</StyledContac>\n          <Filter />\n          <ContactList />\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","StyledFormLabel","StyledFormInput","StyledFormBtm","StyledFormItems","ContactForm","useState","number","setNumber","name","setName","useAddContactMutation","addContact","useFetchContactsQuery","data","handleChange","target","value","console","log","onSubmit","e","preventDefault","formattedName","toLowerCase","every","contact","alert","type","pattern","title","required","onChange","StyledContacts","StyledName","StyledNumber","StyledButton","Contact","id","useDeleteContactMutation","deleteContact","onClick","StyledContactList","StyledContactWraper","StyledContentLoader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ContactList","isLoading","useSelector","getIsLoading","filter","getFilter","formattedFilter","filteredContacts","includes","map","StyledFilter","StyledFilterInput","StyledFilterItems","Filter","dispatch","useDispatch","SelectFilter","StyledContac","StyledTitel","Contacts","isLoggedIn","selectIsLoggedIn","username","selectUsername"],"sourceRoot":""}